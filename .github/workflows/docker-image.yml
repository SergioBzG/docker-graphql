name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    # step by step
    steps:
    - name: Checkout code # name of the step
      uses: actions/checkout@v4 # this step uses this action (take all content in this repo)
      with: # some parameters
        fetch-dept: 0 # indicates that this checkout goes very deep into commit history

    - name: Docker login
      env: # define env variables for this step
        DOCKER_USER: ${{secrets.DOCKER_USER}} # using secrets
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}} 
      run: | # executing docker instruction (login). '|' indicates that there might be several instrucction (line by line)
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Git semantic version
      uses: paulhatch/semantic-version@v4.0.2
      with: # some parameters (those parameters are defined by action being used)
        major_pattern: "major:" # when a commit starts like this indicates it is a major version
        minor_pattern: "feat:" # when a commit starts like this indicates it is a minor version
        format: "${major}.${minor}.${patch}-prerelease${increment}" # default format
      id: version # using this id this step can be referenced by other step 

    - name: Docker build image
      env:
        NEW_VERSION: ${{steps.version.outputs.version}} # accessing to outputs of step withid 'version'
      run: |
        docker build -t sergiobzg/docker-graphql:$NEW_VERSION .
        docker build -t sergiobzg/docker-graphql:latest .
        
    - name: Push docker image
      env:
        NEW_VERSION: ${{steps.version.outputs.version}} # accessing to outputs of step withid 'version'
      run: |
        docker push sergiobzg/docker-graphql:$NEW_VERSION
        docker push sergiobzg/docker-graphql:latest

    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
